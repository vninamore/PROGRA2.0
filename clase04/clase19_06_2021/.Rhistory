plot(x,y,"l")
x<- seq(0,1,0.005)
y<-(1/pi)*asin(2*x-1)+1/2
plot(x,y,"l")
x<- seq(0,1,0.005)
y<- x*(2-x)
plot(x,y,"l")
x<- seq(0,1,0.005)
y<- 1-sin(pi/2(1-x))(1-x)^2
plot(x,y,"l")
x<- seq(0,1,0.005)
y<- 1-sin*(pi/2*(1-x))*(1-x)^2
plot(x,y,"l")
x<- seq(0,1,0.005)
y<- 1-sin*((pi/2*(1-x))*(1-x)^2)
plot(x,y,"l")
x<- seq(0,1,0.005)
y=1-sin(pi/2*(1-x))*((1-x)^2)
plot(x,y,"l")
x<- seq(0,1,0.005)
y<- 1-sin(pi/2*(1-x))*((1-x)^2)
plot(x,y,"l")
nota1:10
nota2:14
n<- mean((nota1+nota2)/2)
if(n>11){"estas aprobado"}
else{"estas desaprobado"}
nota1:10
nota2:14
n<- mean((nota1+nota2)/2)
if(n>11){"estas aprobado"}
else {"estas desaprobado"}
nota1:10
nota2:14
n<- mean((nota1+nota2)/2)
if(n>11){print("estas aprobado")}
else {print("estas desaprobado")}
nota1:10
nota2:14
n<- mean((nota1+nota2)/2)
if(n>11) {print("estas aprobado")}
else {print("estas desaprobado")}
n<- mean((nota1+nota2)/2)
if(n>11) {print("estas aprobado")}else {print("estas desaprobado")}
nota1:10
nota2:14
n<- mean((nota1+nota2)/2)
if(n>11) {print("estas aprobado")}else {print("estas desaprobado")}
nota1:10
nota2:14
n<- mean((nota1+nota2)/2)
nota1:10
nota2:14
n<- mean((nota1+nota2))
if(n>11) {print("estas aprobado")}else {print("estas desaprobado")}
nota1:10
nota2:14
n<-((nota1+nota2)/2)
if(n>11) {print("estas aprobado")}else {print("estas desaprobado")}
nota1:10
nota2:14
n<-((nota1+nota2)/2)
nota1<-10
nota2<-14
n<-((nota1+nota2)/2)
if(n>11) {print("estas aprobado")}else {print("estas desaprobado")}
a<-readline("ingresar nota 1:")
c<-readline("ingresar nota 2:")
promedio=(a+b+c)/3
if(n>=10.5) {print("estas aprobado")}else {print("estas desaprobado")}
a<-readline("ingresar nota 1:")
c<-readline("ingresar nota 2:")
10
b<-readline("ingresar nota 2:")
b<-readline("ingresar nota 2:")
12
a<-readline("ingresar nota 1:")
b<-readline("ingresar nota 2:")
c<-readline("ingresar nota 2:")
promedio=(a+b+c)/3
if(n>=10.5) {print("estas aprobado")}else {print("estas desaprobado")}
promedio<-(a+b+c)/3
if(n>=10.5) {print("estas aprobado")}else {print("estas desaprobado")}
promedio<-(a+b+c)/3
if(promedio>=10.5) {print("estas aprobado")}else {print("estas desaprobado")}
Ro<-10
Tmax<-19
Tmin<-14
To=0.0023*Ro((Tmax+Tmin)/2+17.8)sqrt((Tmax-Tmin))
Ro<-10
Tmax<-19
Tmin<-14
To=0.0023*Ro((Tmax+Tmin)/2+17.8)sqrt(Tmax-Tmin)
To=0.0023*Ro((Tmax+Tmin)/2+17.8)sqrt(Tmax-Tmin))
To=0.0023*Ro((Tmax+Tmin)/2+17.8)sqrt(Tmax-Tmin)
To=0.0023(Ro((Tmax+Tmin)/2+17.8)sqrt(Tmax-Tmin))
To<-0.0023(Ro((Tmax+Tmin)/2+17.8)sqrt(Tmax-Tmin))
To<-0.0023(Ro((Tmax+Tmin)/2+17.8)*sqrt(Tmax-Tmin))
To<-0.0023(Ro((Tmax+Tmin)/2)+17.8)*sqrt(Tmax-Tmin)
To<-0.0023(Ro((Tmax+Tmin)/2)+17.8)((Tmax-Tmin)^1/2
To
Ro<-10
Tmax<-19
Tmin<-14
To<-0.0023(Ro((Tmax+Tmin)/2)+17.8)((Tmax-Tmin)^1/2
To
ET<-function(R=10,M,TM,Tm){
P<-0.0023*R*(M+17.8)*((TM-Tm)^1/2)
return(P)
}
ET<-function(R=10,M,TM,Tm){
P<-0.0023*R*(M+17.8)*((TM-Tm)^1/2)
return(P)
}
pt_ptt(10,24,17)
ET<-function(R=10,M,TM,Tm){
P<-0.0023*R*(M+17.8)*((TM-Tm)^1/2)
return(P)
}
et_pot(10,24,17)
ET<-function(R=10,M,TM,Tm){
P<-0.0023*R*(M+17.8)*((TM-Tm)^1/2)
return(P)
}
et_P(10,24,17)
ET<-function(R=10,M,TM,Tm){
P<-0.0023*R*(M+17.8)*((TM-Tm)^1/2)
return(P)
}
ET(10,24,17)
ET<-function(R=10,M,TM,Tm){
P<-0.0023*R*(M+17.8)*((TM-Tm)^1/2)
return(P)
}
ET(10,24,17)
ET(10,(TM+Tm)/2,24,17)
ET<-function(R=10,M,TM,Tm){
P<-0.0023*R*(M+17.8)*((TM-Tm)^1/2)
return(P)
}
ET(10,(TM+Tm)/2,24,17)
ET<-function(R=10,TM,Tm){
P<-0.0023*R*((TM+Tm)/2)+17.8)*((TM-Tm)^1/2)
return(P)
}
ET(10,24,17)
ET<-function(R=10,TM,Tm){
P<-0.0023*R*((TM+Tm)/2)+17.8)*((TM-Tm)^1/2)
return(P)
}
ET<-function(R=10,TM,Tm){
P<-0.0023*R*((TM+Tm)/2)+17.8)*((TM-Tm)^1/2)
return(P)}
ET<-function(R=10,TM,Tm){
P<-0.0023*R((TM+Tm)/2)+17.8)*((TM-Tm)^1/2)
return(P)}
ET(10,24,17)
ET<-function(R=10,TM,Tm){
P<-0.0023*R((TM+Tm)/2)+17.8)*((TM-Tm)^1/2)
return(P)}
---
title: "sesion04_progra"
author:"vanessa"
date: "19/06/2021"
output: html_document
---
{r setup, include=FALSE}
Knitr::opts_chunks$set(echo=TRUE)
---
title: "sesion04_progra"
author:"vanessa"
date: "19/06/2021"
output: html_document
---
library(rmarkdown)
To<-0.0023(Ro((Tmax+Tmin)/2)+17.8)((Tmax-Tmin)^1/2
To
A_cc <- function(r1, r2){
ar <- pi*((r1)^2-(r2)^2)
return(ar)}
ET<-function(R=10,TM,Tm){
P<-0.0023*R((TM+Tm)/2)+17.8)*((TM-Tm)^1/2)
return(P)}
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
browseURL(url = render("dev/README_ggplot2.Rmd"))
---
title: "sesion04_progra"
author:"vanessa"
date: "19/06/2021"
output: html_document
---
Knitr::opts_chunks$set(echo=TRUE)
{r setup, include=FALSE}
install.packages ("devtools")
devtools :: install_github ( "tylermorganwall / rayshader" )
devtools::install_github("rayshader")
loadzip = tempfile()
download.file("https://tylermw.com/data/dem_01.tif.zip", loadzip)
install.packages("devtools")
install.packages("tidyverse")
loadzip = tempfile()
download.file("https://tylermw.com/data/dem_01.tif.zip", loadzip)
localtif = raster::raster(unzip(loadzip, "dem_01.tif"))
unlink(loadzip)
#And convert it to a matrix:
elmat = raster_to_matrix(localtif)
#We use another one of rayshader's built-in textures:
elmat %>%
sphere_shade(texture = "desert") %>%
plot_map()
a<-10000%3
#1)
a=10000%3
a
#1)
a<-10000%3
#1)
a<-(10000%3)
#1)
10000%3
#1)
10000%3
#1)
10000%%3
#1)
a<-10000%%3
a
print(a "es lo que sobra al repartir 10000$ entre 3 personas")
a<-10000%%3
a
#2)
4560%%3
#3)
b<- c(2:87)
b%%7
print(b%%7==0)
print(as.integer(b%%7==0))
print(as.integer(b%%7=0))
print(as.integer(b%%7==0))
print(as.numeric(b%%7==0))
b<- c(2:87)
c<-b%%7
print(as.numeric(b%%7==0))
if (c==0){print(b)}else{print("no es divisible")}
b<- c(2:87)
c<-b%%7
print(as.numeric(b%%7==0))
if (b%%7==0){print(b)}else{print("no es divisible")}
if (b%%7==0){print(b[])}else{print("no es divisible")}
b<- c(2:87)
c<-b%%7
print(as.numeric(b%%7==0))
if (c==0){print(b[])}else{print("no es divisible")}
b<- c(2:87)
c<-b/7
print(as.numeric(b%%7==0))
if (c==1){print(b[])}else{print("no es divisible")}
b<- c(2:87)
b[b%%7==0]
c<- c(7:3)
d<-c(1:5)
e<-c*5
e
c<- c(7:3)
d<-c(1:5)
e<-d*5
e
c<- c(7:3)
d<-c(seq(from=5, to=25, by=5))
condiA <- ifelse(v1%%2==0, "TRUE", "FALSE")
condiB <- ifelse(v2>10, "TRUE", "FALSE")
data.frame(A,B)
c<- c(7:3)
d<-c(seq(from=5, to=25, by=5))
condiA <- ifelse(v1%%2==0, "TRUE", "FALSE")
condiB <- ifelse(v2>10, "TRUE", "FALSE")
data.frame(condiA,condiB)
v1 <- c(7:3)
v2 <- c(seq(from=5, to=25, by=5))
A <- ifelse(v1%%2==0, "TRUE", "FALSE")
B <- ifelse(v2>10, "TRUE", "FALSE")
data.frame(A,B)
c<- c(7:3)
d<-c(seq(from=5, to=25, by=5))
condiA <- ifelse(c%%2==0, "TRUE", "FALSE")
condiB <- ifelse(d>10, "TRUE", "FALSE")
data.frame(condiA,condiB)
c<- c(7:3)
d<-c(seq(from=5, to=25, by=5))
condiA <- ifelse(c%%2==0, "TRUE", "FALSE")
condiB <- ifelse(d>10, "TRUE", "FALSE")
df(condiA,condiB)
print(condiA=T&condiB=T)
print(condiA=T & condiB=T)
matrix(condiA,condiB)
data.frame(condiA,condiB)
S <- (1:100)
sum(1:100)
sum_s<- (100*101)/2
S <- (1:100)
sum(1:100)
sum_s<- (100*101)/2
S <- (1:100)
sum(1:100)
sum_s<- (100*101)/2
sum_s
factorial(8)
prod(1:8)
factorial(8)
x<- 3:7
sum(exp(x))
i<-1:10
prod(log(sqrt(i)))
<- 10:100
sum(w^3+ 4*w^2)
w<- 10:100
sum(w^3+ 4*w^2)
z<- 1:25
sum(2^z/z +3^z/z^2)
e<- (1,-4,5,9,-4)
min(e)
nivel<-c(1, -4, 4, 9, -4)
nivel[2]
nivel[5]
ifelse(e==min(e), "VMIN", "---")
v5<- c(1, -4, 4, 9, -4)
min(v5)
nivel<-c(1, -4, 4, 9, -4)
nivel[2]
nivel[5]
ifelse(v5==min(v5), "VMIN", "---")
e<- (1,-4,5,9,-4)
min(e)
nivel<-c(1, -4, 4, 9, -4)
nivel[2]
nivel[5]
ifelse(e==min(e), "VMIN", "***")
v5<- c(1, -4, 4, 9, -4)
min(v5)
nivel<-c(1, -4, 4, 9, -4)
nivel[2]
nivel[5]
ifelse(v5==min(v5), "VMIN", "---")
e<- (1,-4,5,9,-4)
min(e)
nivel<-c(1, -4, 5, 9, -4)
nivel[2]
nivel[5]
ifelse(e==min(e), "VMIN", "***")
e<- (1,-4,5,9,-4)
min(e)
nivel<-c(1,-4,5,9,-4)
nivel[2]
nivel[5]
ifelse(e==min(e), "VMIN", "***")
e<- (1,-4,5,9,-4)
min(e)
nivel<-c(1,-4,5,9,-4)
v5<- c(1, -4, 4, 9, -4)
min(v5)
e<- (1, -4, 5, 9, -4)
min(e)
e<-c(1, -4, 5, 9, -4)
min(e)
e<-c(1, -4, 5, 9, -4)
min(e)
nivel<-c(1, -4, 5, 9,-4)
nivel[2]
nivel[5]
ifelse(e==min(e), "VMIN", "***")
e<-c(1, -4, 5, 9, -4)
min(e)
nivel<-c(1, -4, 5, 9,-4)
nivel[2]
nivel[5]
ifelse(e==min(e), "ValorMinimo", "***")
n<- c(5:15)
ninvert<- c(15:5)
n<- c(5:15)
rev(n)
n<- c(5:15)
n<- c(5:15)
n
ninvert<- c(15:5)
ninvert
n<- c(5:15)
rev(n)
d_f<-read.csv("https://raw.githubusercontent.com/fhernanb/datos/master/Paises.txt",sep="",dec=".")
#a
length(d_f)
#b
length(d_f[,1])
#c
d_f[d_f$poblacion==max(d_f[,2]),]
#d
d_f[d_f$alfabetizacion==min(d_f[,3]),]
#15
d.f<-mtcars
d.f[d.f$mpg<18.0,]
d.f[d.f$cyl==4,]
d.f[d.f$wt>2.500&d.f$am==1,]
df<-read.csv("https://raw.githubusercontent.com/fhernanb/datos/master/Paises.txt",sep="",dec=".")
#a
length(df)
#b
length(df[,1])
#c
df[d_f$poblacion==max(d_f[,2]),]
#d
df[d_f$alfabetizacion==min(d_f[,3]),]
#15
df<-mtcars
df[df$mpg<18.0,]
df[df$cyl==4,]
df[df$wt>2.500&d.f$am==1,]
#Vanessa nina 14160173
#1)
a<-10000%%3
a #es lo que sobra al repartir 10000$ entre 3 personas
#2)
4560%%3 #si es divisible por 3 porque su residuo es cero
#3)
b<- c(2:87)
b[b%%7==0]
#4)
c<- c(7:3)
d<-c(seq(from=5, to=25, by=5))
condiA <- ifelse(c%%2==0, "TRUE", "FALSE")
condiB <- ifelse(d>10, "TRUE", "FALSE")
data.frame(condiA,condiB)#en la cuarta posicion se cumplen ambas condiciones
#5)
S <- (1:100)
sum(1:100)
sum_s<- (100*101)/2
sum_s
## la suma es 5050, usando sumatoria y la formula
#6)
e<-c(1, -4, 5, 9, -4)
min(e)
nivel<-c(1, -4, 5, 9,-4)
nivel[2]
nivel[5]
ifelse(e==min(e), "ValorMinimo", "***")
#7)
factorial(8)
#8)
x<- 3:7
sum(exp(x))
#9)
y<-1:10
prod(log(sqrt(y)))
#10)
#11)
n<- c(5:15)
n
ninvert<- c(15:5)
ninvert
n<- c(5:15)
rev(n)#resulta lo mismo que al invertirlo usar la funciÃ³n rev
#12)
w<- 10:100
sum(w^3+ 4*w^2)
#13)
z<- 1:25
sum(2^z/z +3^z/z^2)
#14)
df<-read.csv("https://raw.githubusercontent.com/fhernanb/datos/master/Paises.txt",sep="",dec=".")
#a
length(df)
#b
length(df[,1])
#c
df[d_f$poblacion==max(d_f[,2]),]
#d
df[d_f$alfabetizacion==min(d_f[,3]),]
#15
df<-mtcars
df[df$mpg<18.0,]
df[df$cyl==4,]
df[df$wt>2.500&d.f$am==1,]
#14)
df<-read.csv("https://raw.githubusercontent.com/fhernanb/datos/master/Paises.txt",sep="",dec=".")
#a
length(df)
#b
length(df[,1])
#c
df[df$poblacion==max(df[,2]),]
#d
df[df$alfabetizacion==min(df[,3]),]
#15
df<-mtcars
df[df$mpg<18.0,]
df[df$cyl==4,]
df[df$wt>2.500&df$am==1,]
#14)
df<-read.csv("https://raw.githubusercontent.com/fhernanb/datos/master/Paises.txt",sep="",dec=".")
#primero
length(df)
#segundo
length(df[,1])
#tercero
df[df$poblacion==max(df[,2]),]
#cuarto
df[df$alfabetizacion==min(df[,3]),]
#15
df<-mtcars
df[df$mpg<18.0,]
df[df$cyl==4,]
df[df$wt>2.500&df$am==1,]
